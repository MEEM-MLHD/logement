# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-01-31 11:25
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('address', models.CharField(blank=True, max_length=240)),
                ('url', models.URLField(blank=True, max_length=240)),
                ('description_short', models.CharField(max_length=120)),
                ('description_long', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='actor/logo')),
                ('featured_image', models.ImageField(blank=True, upload_to='actor/featured_image')),
            ],
            options={
                'verbose_name': 'Acteur',
            },
        ),
        migrations.CreateModel(
            name='ActorImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to='images')),
                ('title', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Image',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insee', models.CharField(max_length=5)),
                ('geometry', django.contrib.gis.db.models.fields.GeometryCollectionField(blank=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=120)),
                ('last_name', models.CharField(max_length=120)),
                ('title', models.CharField(max_length=120)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=15)),
                ('description_short', models.CharField(max_length=120)),
                ('description_long', models.TextField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='contact')),
                ('featured_image', models.ImageField(blank=True, upload_to='contact/featured_image')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appli.Actor')),
            ],
        ),
        migrations.CreateModel(
            name='Engagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveIntegerField()),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appli.Contact')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('title_short', models.CharField(max_length=255)),
                ('featured_image', models.ImageField(upload_to='events/featured_image')),
                ('description', models.TextField()),
                ('publication_date', models.DateField()),
                ('deadline_date', models.DateField()),
                ('featured', models.BooleanField()),
                ('create_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ev\xe9nement',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('address', models.CharField(max_length=240)),
                ('description_short', models.TextField(max_length=240)),
                ('description_long', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('green', 'r\xe9alis\xe9'), ('yellow', 'en cours'), ('teal', 'en projet')], default='en projet', max_length=10)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='experience')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='experience')),
                ('url', models.URLField(max_length=240)),
                ('featured', models.BooleanField(default=False)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='appli.City')),
                ('contacts', models.ManyToManyField(through='appli.Engagement', to='appli.Contact')),
            ],
            options={
                'verbose_name': 'Exp\xe9rience',
            },
        ),
        migrations.CreateModel(
            name='ExperienceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to='images')),
                ('title', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'verbose_name': 'Image',
            },
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveIntegerField()),
                ('acteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appli.Actor')),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appli.Experience')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=120)),
            ],
        ),
        migrations.AddField(
            model_name='experience',
            name='participants',
            field=models.ManyToManyField(through='appli.Participation', to='appli.Actor'),
        ),
        migrations.AddField(
            model_name='experience',
            name='tags',
            field=models.ManyToManyField(to='appli.Tag'),
        ),
        migrations.AddField(
            model_name='engagement',
            name='experience',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appli.Experience'),
        ),
        migrations.AddField(
            model_name='contact',
            name='tags',
            field=models.ManyToManyField(to='appli.Tag'),
        ),
        migrations.AddField(
            model_name='actorimage',
            name='actor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appli.Experience'),
        ),
        migrations.AddField(
            model_name='actor',
            name='city',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='appli.City'),
        ),
        migrations.AddField(
            model_name='actor',
            name='tags',
            field=models.ManyToManyField(to='appli.Tag'),
        ),
    ]
